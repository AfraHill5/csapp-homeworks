# Original version, Generated by GCC on Linux(32 bit)

rSum:
.LFB0:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	subl	$24, %esp
	.cfi_def_cfa_offset 32
	movl	32(%esp), %ebx
	movl	36(%esp), %edx
	movl	$0, %eax
	testl	%edx, %edx
	jle	.L2
	subl	$1, %edx
	movl	%edx, 4(%esp)
	leal	4(%ebx), %eax
	movl	%eax, (%esp)
	call	rSum
	addl	(%ebx), %eax
.L2:
	addl	$24, %esp
	.cfi_def_cfa_offset 8
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret	

# Y86 version

rSum:
.LFB0:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	subl	$24, %esp
	.cfi_def_cfa_offset 32
	mrmovl	32(%esp), %ebx
	mrmovl	36(%esp), %edx
	irmovl	$0, %eax
	andl	%edx, %edx
	jle	.L2
	subl	$1, %edx
	rmmovl	%edx, 4(%esp)
	irmovl  $4, %eax
	addl 	%ebx, %eax
	rmmovl	%eax, (%esp)
	call	rSum
	mrmovl  (%ebx), %esi
	addl	%esi, %eax
.L2:
	irmovl  $24, %esi
	addl	%esi, %esp
	.cfi_def_cfa_offset 8
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret		

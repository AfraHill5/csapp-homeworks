# Modification of asum code to compute absolute values of entries.
# This version uses a conditional jump
# Execution begins at address 0
	.pos 0
init:	irmovl Stack, %esp  	# Set up Stack pointer
	irmovl Stack, %ebp  	# Set up base pointer
	jmp Main		# Execute main program

# Array of 4 elements
	.align 4
array:	.long 0x0000000d
	.long 0xffffff40 # -0xc0
	.long 0x00000b00
	.long 0xffff6000 # -0xa0000

Main:	irmovl $4,%eax
	pushl %eax	# Push 4
	irmovl array,%edx
	pushl %edx      # Push array
	call AbsSum	# Sum(array, 4)
	halt

	# int AbsSum(int *Start, int Count)
AbsSum:
	pushl  %ebp
	jmp	   End

End:	
	popl %ebp
	ret

	.pos 0x100
Stack:	# The stack goes here
/* $end code-ysa */
/* $end code-yso */
